<?xml version="1.0"?>
<!-- Generated by the OpenACS Package Manager -->

<package key="xoopenai" url="http://openacs.org/repository/apm/packages/xoopenai" type="apm_application">
    <package-name>xoOpenAI</package-name>
    <pretty-plural>xoOpenAI</pretty-plural>
    <initial-install-p>f</initial-install-p>
    <singleton-p>f</singleton-p>
    <implements-subsite-p>f</implements-subsite-p>
    <inherit-templates-p>f</inherit-templates-p>

    <version name="0.1d" url="http://openacs.org/repository/download/apm/xoopenai-0.1d.apm">
        <owner url="mailto:post@sebastianscheder.com">Sebastian Scheder</owner>
        <summary>XOTcl-based OpenAI-interfaces for OpenACS</summary>
        <release-date>2024-10-01</release-date>
        <maturity>0</maturity>

        <provides url="xoopenai" version="0.1d"/>
        <requires url="xooauth" version="0.4d4"/>
        <requires url="xotcl-core" version="5.10.1b4"/>
        <requires url="xowf" version="5.10.1b8"/>

        <callbacks>
            <callback type="after-mount"  proc="::xoopenai::apm::after_mount"/>
            <callback type="before-uninstantiate"  proc="::xoopenai::apm::before_uninstantiate"/>
            <callback type="after-install"  proc="::xoopenai::apm::after_install"/>
            <callback type="before-uninstall"  proc="::xoopenai::apm::before_uninstall"/>
            <callback type="after-instantiate"  proc="::xoopenai::apm::after_instantiate"/>
        </callbacks>
        <parameters>
            <parameter scope="instance" datatype="string"  min_n_values="1"  max_n_values="1"  name="openai_api_key"  description="The OpenAI API uses API keys for authentication, see https://platform.openai.com/docs/api-reference/api-keys."/>
            <parameter scope="instance" datatype="string"  min_n_values="1"  max_n_values="1"  name="openai_org_id"  description="For users who belong to multiple organizations or are accessing their projects through their legacy user API key, you can pass a header to specify which organization is used for an API request. Usage from these API requests will count as usage for the specified organization, see https://platform.openai.com/docs/api-reference/organizations-and-projects-optional."/>
            <parameter scope="instance" datatype="string"  min_n_values="1"  max_n_values="1"  name="openai_project_id"  description="For users who belong to multiple organizations or are accessing their projects through their legacy user API key, you can pass a header to specify which project is used for an API request. Usage from these API requests will count as usage for the specified project, see https://platform.openai.com/docs/api-reference/organizations-and-projects-optional."/>
            <parameter scope="instance" datatype="string"  min_n_values="1"  max_n_values="1"  name="parameter_page"  description="::xowiki::FormPage to search for parameters. The page name has to contain a language prefix and can refer to a different xowiki instance.
Example: //xowiki/en:xowiki-standard-parameter"/>
        </parameters>

    </version>
</package>
